name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_ENV: test

jobs:
  lint:
    name: Lint
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install
      - name: Lint
        run: bun run lint
  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v5
    - uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
    - name: Install dependencies
      run: bun install
    - name: Create next-env.d.ts
      run: echo -e '/// <reference types="next" />\n/// <reference types="next/image-types/global" />' > apps/studio/next-env.d.ts
    - name: Check types
      run: bun run typecheck
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v5
    - uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
    - name: Install dependencies
      run: bun install
    - name: Create Registry test DB
      run: cd apps/registry && bun run db:push
    - name: Test
      run: bun run test
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v5
    - uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
    - name: Install dependencies
      run: bun install
    - name: Build
      run: bun run build --filter '!@director.run/studio'
